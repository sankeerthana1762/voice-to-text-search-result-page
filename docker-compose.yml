version: '2'

services:
  eureka-server:
    build: eureka-server/
    restart: always
    network_mode: "host"
    hostname: localhost
    image: eureka-server
    ports:
      - 8762:8762
    healthcheck:
      test: "exit 0"

  config-service:
    build: config-server/
    restart: always
    network_mode: "host"
    image: config-service
    hostname: localhost
    ports:
      - 8889:8889
    healthcheck:
      test: "exit 0"

  zuul-api:
    build: zuul-api/
    depends_on:
      - config-service
      - eureka-server
    restart: always
    network_mode: "host"
    image: zuul-api
    hostname: localhost
    ports:
     - 8086:8086
    healthcheck:
      test: "exit 0"

  web-search-service:
    build: web-search-service/
    depends_on:
      - zuul-api
      - eureka-server
      - config-service
      - mongo
    restart: always
    network_mode: "host"
    image: web-search-service
    hostname: localhost
    ports:
      - 8090:8090
    healthcheck:
      test: "exit 0"

  fetch-webpage-service:
    build: fetch-webpage-service/
    depends_on:
      - web-search-service
    restart: always
    network_mode: "host"
    image: fetch-webpage-service
    hostname: localhost
    ports:
      - 8083:8083
    healthcheck:
      test: "exit 0"

  keyword-phrase-service:
    build: keyword-phrase-service/
    depends_on:
      - fetch-webpage-service
    restart: always
    network_mode: "host"
    image: keyword-phrase-service
    hostname: localhost
    ports:
      - 8092:8092
    healthcheck:
      test: "exit 0"

  domain-expert-authentication-service:
    build: domain-expert-authentication-service/
    depends_on:
      - config-service
      - eureka-server
      - zuul-api
      - mongo
    restart: always
    network_mode: "host"
    image: domain-expert-authentication-servicedocker
    hostname: localhost
    ports:
        - 9090:9090
    healthcheck:
      test: "exit 0"

  moviedata-populator-service:
    build: moviedata-populator-service/
    depends_on:
      - config-service
      - eureka-server
      - zuul-api
      - neo4j
    restart: always
    network_mode: "host"
    image: moviedata-populator-servicedocker
    hostname: localhost
    ports:
      - 8888:8888
<<<<<<< HEAD
    healthcheck:
      test: "exit 0"

  mongo:
    image: mongo:3.4-jessie
    ports:
      - 27017:27017
    container_name: mongo
    network_mode: host
    hostname: localhost
    restart: always
#    volumes:
#      - /DB/mongo:/data/db
    healthcheck:
      test: "exit 0"

  neo4j:
    image: neo4j:latest
    ports:
      - 7474:7474
      - 7687:7687
    container_name: neo4j
    network_mode: host
    hostname: localhost
    restart: always
    volumes:
      - /DB/neo4j/data:/data
      - /DB/neo4j/import:/import
    healthcheck:
      test: "exit 0"

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    network_mode: host
    hostname: localhost
    ports:
      - 2181:2181
    restart: always
    healthcheck:
      test: "exit 0"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    network_mode: host
    hostname: localhost
    ports:
      - 9092:9092
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CREATE_TOPICS: "test-1, test-2"
    restart: always
    healthcheck:
      test: "exit 0"
=======

  neo4j-command-service:
    build: neo4j-command-service/
    restart: always
    network_mode: "host"
    image: neo4j-command-servicedocker
    hostname: localhost
    ports:
      - 8995:8995
>>>>>>> f30945102d142b2d1705088dce996bfdbb348780
